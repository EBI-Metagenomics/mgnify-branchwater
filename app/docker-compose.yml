version: '3.4'
services:
  
  mastiffwebapp:
    image: mastiffwebapp
    container_name: mastiffwebapp
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 5000:5000
    environment:
    APP_ENV: "prod"
    APP_DEBUG: "False"
    APP_PORT: 5000
    MONGODB_DATABASE: db
    MONGODB_USERNAME: flaskuser
    MONGODB_PASSWORD: your_mongodb_password
    MONGODB_HOSTNAME: mongodb
    links:
      -db
    depends_on:
      -db
    networks:
      - frontend
      - backend


  db:
    image: mongo:4.0.8 #check mongoversion
    container_name: db
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodbuser
      MONGO_INITDB_ROOT_PASSWORD: your_mongodb_root_password
      MONGO_INITDB_DATABASE: db
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - db:/data/db
    networks:
      - backend

# webserver:
#     build:
#       context: nginx
#       dockerfile: Dockerfile
#     image: digitalocean.com/webserver:latest
#     container_name: webserver
#     restart: unless-stopped
#     environment:
#       APP_ENV: "prod"
#       APP_NAME: "webserver"
#       APP_DEBUG: "true"
#       SERVICE_NAME: "webserver"
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#       - nginxdata:/var/log/nginx
#     depends_on:
#       - flask
#     networks:
#       - frontend

# networks:
#   frontend:
#     driver: bridge
#   backend:
#     driver: bridge

# volumes:
#   mongodbdata:
#     driver: local
#   appdata:
#     driver: local
#   nginxdata:
#     driver: local


